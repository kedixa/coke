name: CI on Ubuntu

on:
  push:
    branches:
    - 'dev*'
  pull_request:
    branches:
    - master
  workflow_dispatch:

env:
  wf_tag: v0.11.11

jobs:
  build-ubuntu-2404:
    name: ubuntu-24.04
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        compiler:
        - cc: gcc-12
          cxx: g++-12
          opts: "--config=gcc_config"
        - cc: gcc-13
          cxx: g++-13
          opts: "--config=gcc_config"
        - cc: gcc-14
          cxx: g++-14
          opts: "--config=gcc_config"
        - cc: clang-16
          cxx: clang-16
          opts: "--config=clang_config"
        - cc: clang-17
          cxx: clang-17
          opts: "--config=clang_config"
        - cc: clang-18
          cxx: clang-18
          opts: "--config=clang_config"

    steps:
    - name: Prepare
      run: |
        sudo apt update
        sudo apt install -y libgtest-dev valgrind
    - uses: actions/checkout@v4
    - name: Build
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
        BAZEL_OPTS: ${{ matrix.compiler.opts }}
      run: |
        echo ${CC} ${CXX}
        bazel build //example:all_examples //benchmark:all_benchmarks ${BAZEL_OPTS}
        bazel test //test/... ${BAZEL_OPTS}
        bazel test //test/... ${BAZEL_OPTS} --config=memcheck

  build-ubuntu-2204:
    name: ubuntu-22.04
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compiler:
        - cc: gcc-11
          cxx: g++-11
          opts: "--config=gcc_config"
        - cc: gcc-12
          cxx: g++-12
          opts: "--config=gcc_config"
        - cc: clang-15
          cxx: clang-15
          opts: "--config=clang_config"

    steps:
    - name: Prepare
      run: |
        sudo apt update
        sudo apt install -y libgtest-dev valgrind
    - uses: actions/checkout@v4
    - name: Build
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}
        BAZEL_OPTS: ${{ matrix.compiler.opts }}
      run: |
        echo ${CC} ${CXX}
        bazel build //example:all_examples //benchmark:all_benchmarks ${BAZEL_OPTS}
        bazel test //test/... ${BAZEL_OPTS}
        bazel test //test/... ${BAZEL_OPTS} --config=memcheck

  build-ubuntu-2004:
    name: ubuntu-20.04
    runs-on: ubuntu-24.04
    container:
      image: ubuntu:20.04
    steps:
    - name: Prepare
      run: |
        apt update
        apt install -y software-properties-common
        add-apt-repository ppa:ubuntu-toolchain-r/test
        apt install -y gcc-11 g++-11 libgtest-dev libssl-dev git cmake
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
      with:
        repository: sogou/workflow
        ref: ${{ env.wf_tag }}
        path: workflow
    - name: Build With GCC
      run: |
        export CC=gcc-11 CXX=g++-11
        cmake -S workflow -B build.workflow -D CMAKE_CXX_STANDARD=20
        make -C workflow -j 8
        cmake -S . -B build.cmake -D Workflow_DIR=workflow \
          -D COKE_ENABLE_TEST=1 -D COKE_ENABLE_EXAMPLE=1 \
          -D COKE_ENABLE_BENCHMARK=1
        make -C build.cmake -j 8 all test
