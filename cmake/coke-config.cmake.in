@PACKAGE_INIT@

set(COKE_VERSION "@coke_VERSION@")
set_and_check(COKE_INCLUDE_DIR "@PACKAGE_INCLUDE_DIR@")
set_and_check(COKE_LIBRARY_DIR "@PACKAGE_LIBRARY_DIR@")

check_required_components("@LIBRARY_NAME@")
set(COKE_LIBRARY "@LIBRARY_NAME@")
set(COKE_LIBRARIES "@LIBRARY_NAME@")

# Find static and shared coke libraries
set(_COKE_BACKUP_CMAKE_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})

set(CMAKE_FIND_LIBRARY_SUFFIXES ".so;.dylib")
find_library(COKE_SHARED_LIBRARY "@LIBRARY_NAME@" PATHS ${COKE_LIBRARY_DIR})
if (COKE_SHARED_LIBRARY STREQUAL "COKE_SHARED_LIBRARY-NOTFOUND")
    set(COKE_SHARED_LIBRARY_FOUND FALSE)
else ()
    set(COKE_SHARED_LIBRARY_FOUND TRUE)
endif ()

set(CMAKE_FIND_LIBRARY_SUFFIXES ".a;.lib")
find_library(COKE_STATIC_LIBRARY "@LIBRARY_NAME@" PATHS ${COKE_LIBRARY_DIR})
if (COKE_STATIC_LIBRARY STREQUAL "COKE_STATIC_LIBRARY-NOTFOUND")
    set(COKE_STATIC_LIBRARY_FOUND FALSE)
else ()
    set(COKE_STATIC_LIBRARY_FOUND TRUE)
endif ()

set(CMAKE_FIND_LIBRARY_SUFFIXES ${_COKE_BACKUP_CMAKE_LIBRARY_SUFFIXES})
